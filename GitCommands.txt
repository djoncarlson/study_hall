git checkout -b branch_name   --to check out a branch
git add .
git commit -m "finished with that branch" 
git checkout master
git merge branch_name
git push
git push staging master
git push production master

to pull a copy of the heroku db -> heroku db:pull --app studyhall (then migrage (rake db:migrate) if necessary)

When deploying to master or staging remember to do a heroku db:migrate to bring the database up to date.
heroku run rake db:migrate --app studyhall
heroku run rake db:migrate --app studyhall-sandbox

Pull dbs from heroku:

$ heroku pgbackups:capture
$ curl -o latest.dump `heroku pgbackups:url`

Restore db:

pg_restore --verbose --clean --no-acl --no-owner -h localhost -U devin -d studyhall_development latest.dump
Then run rake db:migrate if necessary!

$ heroku create --remote production
$ git push production master
$ heroku run rake db:migrate --remote production
$ heroku ps --remote production

heroku pgbackups:restore HEROKU_POSTGRESQL_TURQUOISE -a target-app `heroku pgbackups:url -a source-app`

startup...
navigate to rails code directory
rails s
to get the pg database server running...
use pg-start and pg-stop which are bash aliases that are set in .bash_profile
alias pg-start='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias pg-stop='pg_ctl -D /usr/local/var/postgres stop -s -m fast'

